name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate package.json
      run: npm run validate-env || true
      
    - name: Check for security vulnerabilities
      run: npm audit --audit-level moderate
      
    - name: Start MCP server (background)
      run: |
        npm run start-server &
        sleep 3
        
    - name: Test agent connectivity
      run: |
        timeout 10s npm run start-file-agent &
        timeout 10s npm run start-calc-agent &
        timeout 10s npm run start-web-agent &
        sleep 5
        
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check code style
      run: |
        # Basic syntax check
        find src -name "*.js" -exec node -c {} \;
        
    - name: Check for common issues
      run: |
        # Check for console.logs in production code
        if grep -r "console.log" src/ --exclude-dir=node_modules; then
          echo "Warning: console.log statements found in production code"
        fi
        
        # Check for hardcoded credentials
        if grep -r "api.*key\|password\|secret" src/ --exclude-dir=node_modules | grep -v "process.env"; then
          echo "Error: Potential hardcoded credentials found"
          exit 1
        fi
        
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level high
      
    - name: Check for .env in git
      run: |
        if git ls-files | grep -q "^\.env$"; then
          echo "Error: .env file is tracked in git!"
          exit 1
        fi
